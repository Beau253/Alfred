# Alfred Bot API Documentation v0.1

---

**Status:** `DRAFT`
**Last Updated:** [Current Date]
**Base URL:** `https://[Your Alfred API Domain]/api`

## Introduction

This document outlines the REST API for the Alfred Discord Bot. The API is designed for secure, server-to-server communication between Alfred and other trusted bots or services. Its primary purpose is to allow external services to trigger internal workflows within Alfred.

## Authentication

All API requests must be authenticated using a **Bearer Token**.

The token must be included in the `Authorization` header of every request.

**Header Format:**
`Authorization: Bearer <YourSecretAuthToken>`

Requests made without a valid token, or with a malformed token, will be rejected with a `401 Unauthorized` or `403 Forbidden` status code.

Authentication tokens are managed by Server Administrators via the Alfred Web Dashboard (or environment variables during initial development).

---

## Endpoints

### Onboarding Workflows

Endpoints related to the new member onboarding process.

---

#### **Notify Language Selection**

`POST /v1/onboarding/language_set`

This is the primary endpoint for the onboarding workflow. It is designed to be called by an external service (e.g., a dedicated translator bot) to notify Alfred that a new member has successfully chosen their preferred language. Upon successful validation of this call, Alfred will begin the next stage of the interactive, role-based onboarding tour with the user.

**Request Headers:**

```
Content-Type: application/json
Authorization: Bearer <YourSecretAuthToken>
```

**Request Body:**

```json
{
  "user_id": "987654321098765432",
  "language_code": "es"
}
```

**Field Descriptions:**

| Field | Type | Required | Description |
| :--- | :--- | :--- | :--- |
| `user_id` | String | Yes | The Discord User Snowflake ID of the member who set their language. |
| `language_code` | String | Yes | The 2-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) code for the selected language (e.g., "en", "es", "fr"). |

---

**Responses:**

*   **`200 OK` (Success)**
    Indicates that Alfred has received the notification, validated the data, and has successfully initiated the next step of the onboarding process for the specified user.

    ```json
    {
      "status": "success",
      "message": "Onboarding process initiated for user 987654321098765432.",
      "timestamp": "2023-10-27T10:00:00Z"
    }
    ```

*   **`400 Bad Request`**
    The request body is missing required fields, or the data provided is malformed (e.g., `user_id` is not a valid Snowflake).

    ```json
    {
      "status": "error",
      "message": "Invalid or missing 'user_id' in request body."
    }
    ```

*   **`401 Unauthorized`**
    The `Authorization` header is missing from the request.

    ```json
    {
      "status": "error",
      "message": "Authorization header is missing."
    }
    ```

*   **`403 Forbidden`**
    An `Authorization` header was provided, but the token is invalid, expired, or doesn't have permission to access this resource.

    ```json
    {
      "status": "error",
      "message": "Invalid authentication token."
    }
    ```

*   **`500 Internal Server Error`**
    An unexpected error occurred on Alfred's end while trying to process the request. The client should consider retrying the request after a short delay.

    ```json
    {
      "status": "error",
      "message": "An internal server error occurred."
    }
    ```

---

## Future Endpoints (Placeholder)

As we build out more features, new sections will be added here. For example:

*   `POST /v1/tickets/create_external`: To allow an external system (e.g., a website contact form) to create a ticket.
*   `GET /v1/server/stats`: To provide server statistics to an external monitoring dashboard.
